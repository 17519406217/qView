variables:
  aqtVersion: '0.8b1'
name: '$(Date:yyyy-MM-dd).$(Rev:r)'
jobs:
- job: Windows
  pool:
    vmImage: 'windows-2019'
  variables:
    qtVersion: '5.12.7'
    qtArch: 'win64_msvc2017_64'
  steps:
  - checkout: self
    lfs: true

  - script: |
      pip3 install "aqtinstall==$(aqtVersion)"
      python -m aqt install $(qtVersion) windows desktop $(qtArch)
      echo ##vso[task.prependpath]$(Build.SourcesDirectory)\$(qtVersion)\msvc2017_64\bin
    displayName: 'Install Qt'

  - script: |
      env
      call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      qmake
      nmake
    displayName: 'Build qView'
    
  - script: |
      cd bin
      windeployqt qView.exe --no-compiler-runtime
      rename qView.exe "qView-nightly.$(Build.BuildNumber).exe"
    displayName: 'Deploy qView'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'bin'
      artifactName: 'qView-nightly-win64.$(Build.BuildNumber)'
    displayName: 'Publish build artifact'

- job: macOS
  pool:
    vmImage: 'macOS-10.15'
  variables:
    qtVersion: '5.12.7'
  steps:
  - checkout: self
    lfs: true

  - script: |
      pip3 install "aqtinstall==$(aqtVersion)"
      python3 -m aqt install $(qtVersion) mac desktop
      echo '##vso[task.prependpath]$(Build.SourcesDirectory)/$(qtVersion)/clang_64/bin'
    displayName: 'Install Qt'

  - script: |
      qmake
      make
    displayName: 'Build qView'

  - script: |
      cd bin
      macdeployqt qView.app/
      mv qView.app 'qView-nightly.$(Build.BuildNumber).app'
    displayName: 'Deploy qView'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'bin'
      artifactName: 'qView-nightly-macOS.$(Build.BuildNumber)'
    displayName: 'Publish build artifact'

- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  container: 
    image: ubuntu:trusty
    options: '--privileged --device /dev/fuse'
  variables:
    qtVersion: '5.12.7'
  steps:
  - checkout: self
    lfs: true

  - script: |
      sudo apt-get update
      sudo apt-get install wget software-properties-common build-essential libgl1-mesa-dev fuse libfontconfig1 libxrender1 libxkbcommon0 libxkbcommon-x11-0 -y

      sudo add-apt-repository ppa:deadsnakes/ppa
      sudo apt-get update
      sudo apt-get install python3.6 -y
      wget https://bootstrap.pypa.io/get-pip.py

      sudo python3.6 get-pip.py
    displayName: 'Install packages'

  - script: |
      pip3.6 install "aqtinstall==$(aqtVersion)"
      python3.6 -m aqt install $(qtVersion) linux desktop
      echo '##vso[task.prependpath]$(Build.SourcesDirectory)/$(qtVersion)/gcc_64/bin'
    displayName: 'Install Qt'

  - script: |
        wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        chmod a+x linuxdeployqt-continuous-x86_64.AppImage
    displayName: 'Install linuxdeployqt'

  - script: |
      qmake
      mkdir bin/appdir
      make install INSTALL_ROOT=bin/appdir
    displayName: 'Build qView'

  - script: |
      env
      sudo -E env "PATH=$PATH" ./linuxdeployqt-continuous-x86_64.AppImage bin/appdir/usr/share/applications/qView.desktop -appimage
      ls -R
    displayName: 'Deploy qView'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'bin'
      artifactName: 'qView-nightly-linux.$(Build.BuildNumber)'
    displayName: 'Publish build artifact'
