
variables:
  nightlyDefines: 'DEFINES+=NIGHTLY=$(Build.BuildNumber)'
  nightlyString: '-nightly'

name: '$(Date:yyyy-MM-dd).$(Rev:r)'
jobs:
- job: Build on

  variables:
  - name: osArchName
    value: error

  strategy:
    matrix:
      Linux:
        imageName: 'ubuntu-16.04'
      macOS:
        imageName: 'macOS-10.15'
      Windows:
        imageName: 'windows-2019'

  pool:
    vmImage: $(imageName)

  steps:
  - checkout: self

  - template: ci/install-qt.yml

  - template: ci/build.yml
    parameters:
          defines: $(nightlyDefines)
    
  - template: ci/deploy.yml

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'bin'
      artifactName: 'qView$(nightlyString)-$(osArchName).$(Build.BuildNumber)'
    displayName: 'Publish build artifact'

  # - script: |
  #       wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  #       chmod a+x linuxdeployqt-continuous-x86_64.AppImage
  #   displayName: 'Install linuxdeployqt'

  # - script: |
  #     git clone https://code.qt.io/qt/qtstyleplugins.git
  #     cd qtstyleplugins
  #     qmake
  #     sudo make install

  #     wget 'https://sourceforge.net/projects/qt5ct/files/latest/download'
  #     tar xf download
  #     cd qt5ct*
  #     qmake
  #     sudo make install
  #   displayName: Get additional themes GTK+2 and qt5ct

  # - template: ci/build.yml
  #   parameters:
  #       defines: $(nightlyDefines)

  # - script: |
  #     mkdir bin/appdir
  #     make install INSTALL_ROOT=bin/appdir
  #     cd bin
  #     ../linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/qView.desktop -appimage -extra-plugins=styles/libqt5ct-style.so,platformthemes/libqt5ct.so,iconengines,platformthemes/libqgtk3.so
  #     mkdir out
  #     mv *.AppImage out/qView$(nightlyString).$(Build.BuildNumber).x86_64.AppImage
  #   displayName: 'Deploy qView'